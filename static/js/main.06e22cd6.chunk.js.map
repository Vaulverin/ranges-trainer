{"version":3,"sources":["firebase-config.tsx","providers/authProvider.tsx","views/DashboardPage.tsx","providers/dataProvider.tsx","views/LoginPage.tsx","views/SimpleTradeList.tsx","views/SimpleTradeCreate.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","authProvider","FirebaseAuthProvider","DashboardPage","Card","Title","title","CardContent","dataProvider","FirebaseDataProvider","uiConfig","signInSuccessUrl","signInOptions","firebase","auth","GoogleAuthProvider","PROVIDER_ID","SignInScreen","firebaseAuth","LoginPage","props","Login","actions","TopToolbar","CreateButton","basePath","label","SimpleTradeList","List","pagination","bulkActionButtons","Datagrid","TextField","source","DateField","NumberField","SimpleTradeCreate","Create","FormWithRedirect","render","formProps","Box","p","Typography","variant","gutterBottom","TextInput","fullWidth","SelectInput","choices","id","name","display","flex","mr","NumberInput","SaveButton","icon","color","handleSubmitWithRedirect","ml","mt","BooleanInput","defaultValue","Toolbar","justifyContent","width","PlayArrow","saving","ListButton","ChevronLeft","App","Admin","loginPage","dashboard","Resource","options","list","create","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06e22cd6.chunk.js","sourcesContent":["const config = {\n    apiKey: \"AIzaSyAO_6niO-zioaRmHJU5pHULXmyJeXNa158\",\n    authDomain: \"se-monitoring-c348c.firebaseapp.com\",\n    databaseURL: \"https://se-monitoring-c348c-default-rtdb.firebaseio.com\",\n    projectId: \"se-monitoring-c348c\",\n    storageBucket: \"se-monitoring-c348c.appspot.com\",\n    messagingSenderId: \"756014732771\",\n    appId: \"1:756014732771:web:147038fff56a959b767cd6\"\n};\nexport default config;","import {FirebaseAuthProvider} from 'react-admin-firebase';\nimport config from '../firebase-config';\nconst authProvider = FirebaseAuthProvider(config, {});\n\nexport default authProvider;","import * as React from \"react\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport {Title} from 'react-admin';\n\nconst DashboardPage = () => (\n    <Card>\n        <Title title=\"DashboardPage\"/>\n        <CardContent>Some cool charts are going to appear soon...</CardContent>\n    </Card>\n);\n\nexport default DashboardPage;","import {FirebaseDataProvider} from 'react-admin-firebase';\nimport config from '../firebase-config';\nconst dataProvider = FirebaseDataProvider(config, {});\n\nexport default dataProvider;","import React from \"react\";\nimport {Login} from \"react-admin\";\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\n\n// Configure FirebaseUI.\nconst uiConfig = {\n    signInSuccessUrl: '#/',\n    signInOptions: [\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    ]\n};\n\nconst SignInScreen = () => <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/>;\n\nconst LoginPage = (props: any) => (\n    <Login {...props}>\n        <SignInScreen/>\n    </Login>\n);\n\nexport default LoginPage;","import React from \"react\";\nimport {List, Datagrid, TextField, DateField, NumberField, TopToolbar, CreateButton} from \"react-admin\";\n\nconst actions = (props: any) => (\n    <TopToolbar>\n        <CreateButton basePath={props.basePath} label=\"Start New Trade\" />\n    </TopToolbar>\n);\n\nconst SimpleTradeList = (props: any) => (\n    <>\n        <List {...props} actions={actions(props)} pagination={false} bulkActionButtons={false}>\n            <Datagrid>\n                <TextField source=\"Symbol\"/>\n                <TextField source=\"Status\"/>\n                <TextField source=\"Side\"/>\n                <DateField source=\"Started\"/>\n                <DateField source=\"Finished\"/>\n                <NumberField source=\"AVGPrice\" label=\"AVG Price\" />\n                <NumberField source=\"OrdersCount\" />\n            </Datagrid>\n        </List>\n    </>\n)\n\nexport default SimpleTradeList;","import React from \"react\";\nimport {\n    Create,\n    TextInput,\n    ListButton,\n    SelectInput,\n    NumberInput,\n    BooleanInput,\n    SaveButton,\n    FormWithRedirect,\n    Toolbar,\n    Button\n} from \"react-admin\";\nimport {ChevronLeft, PlayArrow} from '@material-ui/icons';\nimport {Typography, Box, } from '@material-ui/core';\n\nconst SimpleTradeCreate = (props: any) => (\n    <Create {...props} title=\"Start New Simple Trade\">\n        <FormWithRedirect\n            {...props}\n            render={(formProps: any) => (\n                <form>\n                    <Box p=\"1em\">\n                        <Box>\n                            <Typography variant=\"h5\" gutterBottom>All Markets Simple Trade</Typography>\n                            <TextInput source=\"symbol\" label=\"Symbol\" fullWidth/>\n                            <SelectInput source=\"account\"\n                                         label=\"Choose an account type\"\n                                         fullWidth\n                                         choices={[\n                                             {id: 1, name: 'Spot'},\n                                             {id: 2, name: 'CrossMargin'},\n                                             {id: 3, name: 'IsolatedMargin'},\n                                             {id: 4, name: 'USDTFutures'},\n                                             {id: 5, name: 'CoinFutures'},\n                                         ]}\n                            />\n                            <Typography variant=\"h6\" gutterBottom>Amount</Typography>\n                            <Box display=\"flex\">\n                                <Box flex={1} mr=\"0.5em\">\n                                    <NumberInput source=\"usdtAmount\" label=\"USDT\" fullWidth/>\n                                    <SaveButton label=\"Calc Coin\"\n                                                icon={<></>}\n                                                color=\"secondary\"\n                                                handleSubmitWithRedirect={()=>{}}\n                                    />\n                                </Box>\n                                <Box flex={1} ml=\"0.5em\">\n                                    <NumberInput source=\"coinAmount\" label=\"Coin\" fullWidth/>\n                                    <SaveButton label=\"Calc USDT\"\n                                                icon={<></>}\n                                                color=\"secondary\"\n                                                handleSubmitWithRedirect={()=>{}}\n                                    />\n                                </Box>\n                            </Box>\n\n                            <Box mt=\"1em\"/>\n                            <Typography variant=\"h6\" gutterBottom>Order Amount</Typography>\n                            <Box display=\"flex\">\n                                <Box flex={1} mr=\"0.5em\">\n                                    <NumberInput source=\"OrderAmountUSDT\" label=\"USDT\" fullWidth/>\n                                </Box>\n                                <Box flex={1} ml=\"0.5em\">\n                                    <NumberInput source=\"OrderAmountCoin\" label=\"Coin\" fullWidth/>\n                                </Box>\n                            </Box>\n\n                            <Typography variant=\"h6\" gutterBottom>Garbage Amount</Typography>\n                            <Box display=\"flex\">\n                                <Box flex={1} mr=\"0.5em\">\n                                    <NumberInput source=\"GarbageAmountUSDT\" label=\"USDT\" fullWidth/>\n                                </Box>\n                                <Box flex={1} ml=\"0.5em\">\n                                    <NumberInput source=\"GarbageAmountCoin\" label=\"Coin\" fullWidth/>\n                                </Box>\n                            </Box>\n                            <Box mt=\"1em\"/>\n                        </Box>\n                        <BooleanInput source=\"isUSDTPair\" label=\"Is USDT Pair\"/>\n                        <SelectInput source=\"action\"\n                                     defaultValue=\"buy\"\n                                     choices={[\n                                         {id: 'buy', name: 'Buy'},\n                                         {id: 'sell', name: 'Sell'},\n                                     ]}\n                        />\n                    </Box>\n                    <Toolbar {...props}>\n                        <Box display=\"flex\" justifyContent=\"space-between\" width=\"100%\">\n                            <SaveButton\n                                label=\"Start\"\n                                icon={<PlayArrow/>}\n                                saving={formProps.saving}\n                                handleSubmitWithRedirect={formProps.handleSubmitWithRedirect}\n                            />\n                            <ListButton basePath={formProps.basePath} label=\"Back\" icon={<ChevronLeft/>}/>\n                        </Box>\n                    </Toolbar>\n                </form>\n            )}\n        />\n    </Create>\n)\n\nexport default SimpleTradeCreate;","import React from 'react';\nimport authProvider from './providers/authProvider';\nimport {Admin, Resource} from \"react-admin\";\nimport DashboardPage from \"./views/DashboardPage\";\nimport dataProvider from \"./providers/dataProvider\";\nimport LoginPage from \"./views/LoginPage\";\nimport SimpleTradeList from \"./views/SimpleTradeList\";\nimport SimpleTradeCreate from \"./views/SimpleTradeCreate\";\n\nconst App = () => (\n    <Admin title=\"Stock Exchange Monitoring\"\n           authProvider={authProvider}\n           loginPage={LoginPage}\n           dashboard={DashboardPage}\n           dataProvider={dataProvider}\n    >\n        <Resource name=\"simple-trade-history\"\n                  options={{ label: 'Simple Trade' }}\n                  list={SimpleTradeList}\n                  create={SimpleTradeCreate}\n        />\n    </Admin>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}